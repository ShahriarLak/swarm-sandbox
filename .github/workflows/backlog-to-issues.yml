name: Backlog â†’ Issues

on:
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  create:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse backlog and create issues
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const core = require('@actions/core');

            // 1) Find a backlog file
            const candidates = [
              'docs/backlog.md',
              'docs/backlog/backlog.md',
              'backlog.md'
            ];

            let backlogPath = null;
            let text = '';
            for (const p of candidates) {
              try {
                text = fs.readFileSync(p, 'utf8');
                backlogPath = p;
                core.info(`Loaded ${p}`);
                break;
              } catch (_) { /* try next */ }
            }

            if (!text) {
              core.setFailed(`Could not find a backlog file. Looked in: ${candidates.join(', ')}`);
              return;
            }

            // 2) Parse "### Feature: <title>" sections
            const lines = text.split(/\r?\n/);
            const features = [];
            let current = null;

            const flush = () => {
              if (current) {
                current.body = (current.body || '').trim();
                if (current.title) features.push(current);
                current = null;
              }
            };

            for (const line of lines) {
              const m = line.match(/^###\s*Feature:\s*(.+)$/i);
              if (m) {
                flush();
                current = { title: m[1].trim(), body: '' };
              } else if (current) {
                current.body += line + '\n';
              }
            }
            flush();

            core.info(`Parsed ${features.length} features from ${backlogPath}`);

            // 3) Read open issues to avoid duplicates
            const { owner, repo } = context.repo;
            const existing = await github.paginate(
              github.rest.issues.listForRepo,
              { owner, repo, state: 'open', per_page: 100 }
            );
            const openTitles = new Set(existing.map(i => i.title));

            // 4) Create new issues
            let created = 0;
            for (const f of features) {
              if (openTitles.has(f.title)) {
                core.info(`Skipping (already open): ${f.title}`);
                continue;
              }

              const body =
                `Created from **${backlogPath}**\n\n` +
                (f.body ? f.body : '_No extra details provided._');

              await github.rest.issues.create({
                owner,
                repo,
                title: f.title,
                body,
                labels: ['backlog', 'feature']
              });

              created++;
            }

            core.info(`Created ${created} new issue(s).`);
